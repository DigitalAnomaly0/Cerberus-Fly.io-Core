name: Deploy to Fly.io

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      target_env:
        type: choice
        description: Which environment? (optional)
        default: prod
        options: [prod, staging]

jobs:
  deploy:
    runs-on: ubuntu-latest
    # If you use envs, uncomment the next line and set it to ${{ inputs.target_env || 'prod' }}
    # environment: ${{ inputs.target_env || 'prod' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve app & region
        run: |
          echo "FLY_APP_NAME=${{ vars.FLY_APP_NAME || 'cerberus' }}" >> $GITHUB_ENV
          echo "FLY_PRIMARY_REGION=${{ vars.FLY_PRIMARY_REGION || 'ord' }}" >> $GITHUB_ENV
          echo "App: $FLY_APP_NAME"
          echo "Region: $FLY_PRIMARY_REGION"

      - name: Patch fly.toml
        run: |
          sed -i 's/^app = ".*/app = "'"$FLY_APP_NAME"'"/' fly.toml
          sed -i 's/^primary_region = ".*/primary_region = "'"$FLY_PRIMARY_REGION"'"/' fly.toml

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Ensure app exists
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl apps show "$FLY_APP_NAME" >/dev/null 2>&1 || flyctl apps create "$FLY_APP_NAME"

      - name: Set Fly secrets (idempotent)
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          ARGS=""
          [ -n "${{ secrets.CERBERUS_API_KEY }}" ]  && ARGS="$ARGS CERBERUS_API_KEY=${{ secrets.CERBERUS_API_KEY }}"
          [ -n "${{ secrets.REQUIRE_TIMESTAMP }}" ] && ARGS="$ARGS REQUIRE_TIMESTAMP=${{ secrets.REQUIRE_TIMESTAMP }}"
          [ -n "${{ secrets.GEMINI_API_KEY }}" ]    && ARGS="$ARGS GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}"
          if [ -n "$ARGS" ]; then
            flyctl secrets set $ARGS --app "$FLY_APP_NAME"
          else
            echo "No secrets provided; skipping."
          fi

      - name: Deploy (remote build)
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl deploy --remote-only --app "$FLY_APP_NAME"

      - name: Output URL
        run: echo "https://$FLY_APP_NAME.fly.dev" > URL.txt

      - name: Upload URL artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-url
          path: URL.txt
