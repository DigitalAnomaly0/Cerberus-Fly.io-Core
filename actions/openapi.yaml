openapi: 3.1.0
info:
  title: Cerberus Runner (ChatGPT + Gemini)
  version: "0.4.2"
servers:
  - url: https://YOUR_APP_HOST
paths:
  /health:
    get:
      operationId: health
      summary: Health check
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string }
                  ts: { type: integer }
                  require_timestamp: { type: boolean }
                  has_api_key: { type: boolean }
  /run:
    post:
      operationId: runJob
      summary: Execute a Cerberus job and return a base64 ZIP
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunJobRequest"
      responses:
        "200":
          description: Artifact ZIP and metadata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunJobResponse"
  /llm/gemini-test:
    get:
      operationId: geminiTest
      summary: Verify Gemini API connectivity
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
                  model: { type: string }
                  text: { type: string }
  /run/gemini:
    post:
      operationId: runGemini
      summary: Use Gemini to craft content, then return a base64 ZIP
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunGeminiRequest"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunJobResponse"
  /debug/echo:
    post:
      operationId: debugEcho
      summary: Echo headers/body back (temporary)
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    RunJobRequest:
      type: object
      additionalProperties: false
      properties:
        run_id: { type: string }
        stage: { type: string, default: synthesis }
        payload:
          type: object
          additionalProperties: true
      required: [payload]
    RunGeminiRequest:
      type: object
      additionalProperties: false
      properties:
        run_id: { type: string }
        prompt: { type: string, default: Summarize Cerberus in one paragraph. }
        model: { type: string, default: gemini-2.5-flash }
    Artifact:
      type: object
      properties:
        filename: { type: string }
        mime: { type: string, example: application/zip }
        size_bytes: { type: integer }
        sha256: { type: string }
        base64: { type: string, description: Base64-encoded ZIP bytes }
      required: [filename, mime, size_bytes, sha256, base64]
    RunJobResponse:
      type: object
      properties:
        run_id: { type: string }
        artifact: { $ref: "#/components/schemas/Artifact" }
        logs:
          type: array
          items: { type: string }
      required: [artifact]
